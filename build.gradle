buildscript {
    ext.kotlin_version = '1.7.10'
    ext.ktor_version = '2.2.3'
    ext.logback_version = "1.2.3"
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:1.2-1.0.9'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configurations {
    embed
    api.extendsFrom(embed)
}
apply plugin: 'java-library'
apply plugin: 'forge'
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.kotlin.jvm"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

version = "1.7.10-SNAPSHOT"
group = "org.webctc"
archivesBaseName = "WebCTC"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
    srgExtra "PK: io/netty org/webctc/lib/io/netty"
}

repositories {
    mavenCentral()
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    embed 'org.danilopianini:gson-extras:0.2.4'

    embed "io.ktor:ktor-server-core-jvm:$ktor_version"
    embed "io.ktor:ktor-server-websockets-jvm:$ktor_version"
    embed "io.ktor:ktor-server-cors-jvm:$ktor_version"
    embed "io.ktor:ktor-server-host-common-jvm:$ktor_version"
    embed "io.ktor:ktor-server-status-pages-jvm:$ktor_version"
    embed "io.ktor:ktor-server-netty-jvm:$ktor_version"
    embed "io.ktor:ktor-server-compression:$ktor_version"

    api "com.github.Kai-Z-JP:KaizPatchX:feb5341b"
}

processResources {
    duplicatesStrategy 'INCLUDE'
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(Jar) { compileJava.options.encoding = 'UTF-8' }

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    duplicatesStrategy 'INCLUDE'
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF/', 'kotlin/', 'org/slf4j/'
        }
    }

    from(rootDir) {
        include 'README.md'
        include 'LICENSE'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}