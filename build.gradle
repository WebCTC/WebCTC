buildscript {
    ext.kotlin_version = '1.5.0'
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath 'io.vacco.java-express:java-express:0.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jetbrains:annotations:20.1.0'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'forge'
apply plugin: 'kotlin'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

version = "1.7.10-latest"
group = "org.webctc"
archivesBaseName = "WebCTC"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    embed 'io.vacco.java-express:java-express:0.2.1'

    implementation "curse.maven:ngtlib-288989:2940833"
    implementation "curse.maven:realtrainmod-288988:3039063"
    implementation 'com.github.masa300:SignalControllerMod:master-SNAPSHOT'

    embed "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    embed 'org.jetbrains:annotations:20.1.0'
}

task submodulesUpdate(type:Exec) {
    description 'Updates (and inits) git submodules'
    commandLine 'git', 'submodule', 'update', '--init', '--recursive'
    group 'Build Setup'
}

processResources {
    dependsOn submodulesUpdate
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(Jar) { compileJava.options.encoding = 'UTF-8' }

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
        }
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}